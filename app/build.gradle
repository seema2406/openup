apply plugin: 'com.android.application'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries;
def test = rootProject.ext.testingLibraries;


android {
    compileSdkVersion 25
    buildToolsVersion '25.0.1'

    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.version_code
        versionName cfg.version_name
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"



        File secretsExists = new File("secrets.properties")
        if (secretsExists.exists()) {
            def secretsFile = rootProject.file('secrets.properties')
            def secrets = new Properties()
            secrets.load(new FileInputStream(secretsFile))

            buildConfigField "String", "BASE_URL", secrets.getProperty('BASE_URL')

        } else {

            buildConfigField "String", "BASE_URL", "\"Please update Base url.\""
        }

        vectorDrawables.useSupportLibrary = true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        /*debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            ext.alwaysUpdateBuildId = false
            // crashlytics generates new buildId for each build disable it to optimise build time
        }*/
    }
}



dependencies {
    compile "com.android.support:support-v4:${libs.supportVersion}"
    compile 'com.android.support.constraint:constraint-layout:1.1.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:${test.junit}"
    compile "com.android.support:support-v4:${libs.supportVersion}"
    compile "com.android.support:design:${libs.supportVersion}"
    compile "com.android.support:support-vector-drawable:${libs.supportVersion}"
    compile "com.android.support:appcompat-v7:${libs.supportVersion}"
    compile "com.android.support:recyclerview-v7:${libs.supportVersion}"
    compile "com.android.support:cardview-v7:${libs.supportVersion}"
    compile "com.android.support:design:${libs.supportVersion}"

    //compile "com.android.support.constraint:constraint-item_image_layout:${libs.constraint}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"
    compile "com.jakewharton:butterknife:${libs.butterknife}"
    compile "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${libs.retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava:${libs.rxjavaAdapter}"
    compile "com.github.bumptech.glide:glide:${libs.glide}"

    // logger
    compile "com.jakewharton.timber:timber:${libs.timberVersion}"
    compile "com.mikhaellopez:circularimageview:${libs.circularImageView}"
    compile "com.github.armcha:SpaceNavigationView:${libs.spaceNavigationView}"
    compile 'com.oguzbabaoglu:fancymarkers:0.2'
    compile "com.google.firebase:firebase-core:${libs.firebase}"
    compile "com.google.firebase:firebase-auth:${libs.firebase}"
    compile "com.google.android.gms:play-services-auth:${libs.googlePlayService}"

    //facebook login
    //compile 'com.facebook.android:facebook-android-sdk:4.26.0'
}
apply plugin: 'com.google.gms.google-services'
